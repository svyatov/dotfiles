uwpp() {
    if [[ -n $1 ]]; then
        local archive=${1##*/}
        wget $1 && unzip -quo $archive && rm $archive && echo 'Done.'
    else
        echo 'Please, provide url for plugin archive.'
    fi
}

ORIGINAL_GIT_PATH=$(which git)
git() {
    if [[ -n $1 ]]; then
        $ORIGINAL_GIT_PATH $@
    else
        $ORIGINAL_GIT_PATH st
    fi
}

z() {
    if [[ -n $1 ]]; then
        zeus $@
    else
        zeus start
    fi
}

_directories_list() { find $1 -type d -maxdepth 1 -not -name '.' -not -name '..' -exec basename {} + }

u() {
    if [[ -n $1 ]]; then
        cd ../$1
    else
        cd ..
    fi
}
_u() { reply=("${(@f)$(_directories_list ..)}") }
compctl -M 'm:{a-z}={A-Z}' -K _u u

uu() {
    if [[ -n $1 ]]; then
        cd ../../$1
    else
        cd ../..
    fi
}
_uu() { reply=("${(@f)$(_directories_list ../..)}") }
compctl -M 'm:{a-z}={A-Z}' -K _uu uu

mkcd() { mkdir -p "$1" && cd "$1" }
rncd() { rails new "$1" && cd "$1" }

# git clone & cd (accepts only ssh url format: git@github.com:Svyatov/dotfiles.git)
glcd() {
    local repo=${1##*/}
    local dirname=${repo%\.git}

    if [[ -n $2 ]]; then
        dirname=$2
    fi

    git clone "$1" "$dirname" && cd "$dirname"
}

# Jumps
export JUMPS_PATH=$HOME/.jump_shortcuts
_jumps_usage_help() {
    echo "You can use following commands:"
    echo "     jump [shortcut] - change directory to the specified shortcut"
    echo " jump-add [shortcut] - create a shortcut for the current directory"
    echo " jump-del [shortcut] - remove the specified shortcut"
    echo "jump-list            - list all available jump shortcuts"
}
jump() {
    if [[ -z $1 ]]; then _jumps_usage_help; return 1; fi
    cd -P $JUMPS_PATH/$1 2> /dev/null || echo "No such jump shortcut: $1"
}
jump-add() {
    if [[ -z $1 ]]; then _jumps_usage_help; return 1; fi
    if [[ ! -d $JUMPS_PATH ]]; then
        mkdir -p $JUMPS_PATH;
    fi
    if [[ -L $JUMPS_PATH/$1 ]]; then
        local jump_destination=$(readlink $JUMPS_PATH/$1)
        echo "Shortcut \"${1}\" already exists and points to: ${jump_destination}"
    else
        ln -s "$(pwd)" $JUMPS_PATH/$1
    fi
}
jump-del() {
    if [[ -z $1 ]]; then _jumps_usage_help; return 1; fi
    if [[ -L $JUMPS_PATH/$1 ]]; then
        rm $JUMPS_PATH/$1
    else
        echo "No such jump shortcut: $1"
    fi
}
jump-list() {
    \ls -l $JUMPS_PATH | tail -n +2 | sed 's/  / /g' | cut -d' ' -f9- | awk -F ' -> ' '{printf "%-10s -> %s\n", $1, $2}'
}
_jump-list() {
    if [[ -d $JUMPS_PATH ]]; then
        reply=($(\ls $JUMPS_PATH))
    else
        reply=()
    fi
}
compctl -K _jump-list jump
compctl -K _jump-list jump-del

_bin_first() {
    if [[ -x ./bin/$1 ]]; then
        ./bin/$1 ${@:2} # means "skip first element in array"
    else
        # bundler and rake are installed in global gemset
        if [[ -x $GEM_HOME@global/bin/$1 ]]; then
            $GEM_HOME@global/bin/$1 ${@:2}
        else
            $GEM_HOME/bin/$1 ${@:2}
        fi
    fi
}

rails()  { _bin_first rails  $@ }
rake()   { _bin_first rake   $@ }
cap()    { _bin_first cap    $@ }
bundle() { _bin_first bundle $@ }

_rake_does_task_list_need_generating () {
  if [ ! -f .rake_tasks ]; then return 0;
  else
    accurate=$(stat -f%m .rake_tasks)
    changed=$(stat -f%m Rakefile)
    return $(expr $accurate '>=' $changed)
  fi
}
_rake () {
  if [ -f Rakefile ]; then
    if _rake_does_task_list_need_generating; then
      rake --tasks --quiet | cut -d " " -f 2 > .rake_tasks
    fi
    compadd `cat .rake_tasks`
  fi
}
compdef _rake rake
